Test Harness for verifying nand2.spice

.include '../../sky130nm.lib'
.include 'nand2.spice'

X1 A B VGND VNB VPB VPWR Y sky130_fd_sc_hd__nand2_1

* Supplies
VVGND VGND 0 0
VVPWR VPWR VGND DC 1.8
VVPB VPB VGND DC 1.8
VVNB VNB VGND 0
* Input Pulse
VA A VGND PULSE 0 1.8 0 0.01n 0.01n 50ns 100ns 
VB B VGND 1.8

CLOAD Y VGND 0.0005p

.control
foreach in_delay 0.06ns	0.18ns 0.42ns 0.6ns 1.2ns
    
    * Initiating Text Files in folder data
    echo "input_delay:$in_delay" >> data/input_delay.txt
    echo "input_delay:$in_delay" >> data/cell_fall.txt
    echo "input_delay:$in_delay" >> data/cell_rise.txt
    echo "input_delay:$in_delay" >> data/fall_transition.txt
    echo "input_delay:$in_delay" >> data/rise_transition.txt

    * 1.666 to match the slew rate
    let actual_rtime = $in_delay*1.666
    
    * Changing the V2 Supply Rise time as per the Input Rise Time vector
    alter @VA[pulse] = [ 0 1.8 0 $&actual_rtime $&actual_rtime 50ns 100ns ]
    alter CLOAD 0.0005p
    
    * Input Vector - Load Cap values(index2)
    foreach out_cap 0.025pF 0.05pF 0.1pF 0.3pF 0.6pF
        
        * Changing the C1 value as per the foreach list
        alter CLOAD $out_cap
        
        tran 1n 200ns
        run

        * Measuring Cell Fall Time @ 50% of VDD(1.8V) 
        meas tran tinfall when v(A)=0.9 FALL=1 
        meas tran tofall when v(Y)=0.9 FALL=1
        let cfall = (tofall-tinfall)/1e-9
        if abs(cfall)>20
            meas tran tinfall when v(A)=0.9 Rise=1 
            meas tran tofall when v(Y)=0.9 FALL=1
            let cfall = abs(tofall-tinfall)/1e-9
        end
        echo "out_cap:$out_cap:cell_fall:$&cfall" >> data/cell_fall.txt

        * Measuring Cell Rise Time @ 50% of VDD(1.8V) 
        meas tran tinrise when v(A)=0.9 RISE=1 
        meas tran torise when v(Y)=0.9 RISE=1
        let crise = (torise-tinrise)/1e-9
        if abs(crise)>20
            meas tran tinrise when v(A)=0.9 FALL=1 
            meas tran torise when v(Y)=0.9 RISE=1
            let crise = abs(tinrise-torise)/1e-9
        end
        echo "out_cap:$out_cap:cell_rise:$&crise" >> data/cell_rise.txt

        * Measuring Fall Transion Time @ 80-20% of VDD(1.8V) 
        meas tran ft1 when v(Y)=1.44 FALL=2 
        meas tran ft2 when v(Y)=0.36 FALL=2
        let fall_tran = (ft2-ft1)/1e-9
        echo "out_cap:$out_cap:fall_transition:$&fall_tran" >> data/fall_transition.txt
        
        * Measuring Rise Transion Time @ 20-80% of VDD(1.8V) 
        meas tran rt1 when v(Y)=1.44 RISE=2 
        meas tran rt2 when v(Y)=0.36 RISE=2
        let rise_tran = (rt1-rt2)/1e-9
        echo "out_cap:$out_cap:rise_transition:$&rise_tran" >> data/rise_transition.txt

        * plot a y
    end
    
    * Verification of INPUT RISE TIME
    meas tran ts1 when v(A)=1.44 RISE=1 
    meas tran ts2 when v(A)=0.36 RISE=1
    meas tran ts3 when v(A)=1.44 FALL=1 
    meas tran ts4 when v(A)=0.36 FALL=1
    let RISE_IN_SLEW = (ts1-ts2)/1e-9
    let FALL_IN_SLEW = (ts4-ts3)/1e-9
    echo "actual_rise_slew:$&RISE_IN_SLEW" >> data/input_delay.txt
    echo "actual_fall_slew:$&FALL_IN_SLEW" >> data/input_delay.txt

end  
.endc
